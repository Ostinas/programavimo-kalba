expr            : KEYWORD: VAR IDENTIFIER EQ expr
                : comp_exp ((KEYWORD:AND|KEYWORD:OR) comp_exp)*

comp_exp        : NOT comp_exp
                : arith_exp ((EE|LT|GT|LTE|GTE) arith_exp)*

arith_exp       : term ((PLUS|MINUS) term)*

term            : factor ((MUL|DIV) factor)*

factor          : (PLUS|MINUS) factor
                : power
                : modulo

power           : call (POW factor)*

modulo          : call (MOD factor)*

call            : atom (LPAREN ( expr (COMMA expr)*)? RPAREN)?

atom            : INT|FLOAT|IDENTIFIER
                : LPAREN expr RPAREN
                : list_exp
                : if_exp
                : for_exp
                : while_exp
                : func_def

list_exp        : LSQUARE ( expr (COMMA expr)*)? RSQUARE

if_exp          : KEYWORD:IF expr KEYWORD: THEN expr (KEYWORD:ELSEIF expr KEYWORD: THEN expr)* (KEYWORD:ELSE expr)?

for_exp         : KEYWORD: FOR IDENTIFIER EQ expr KEYWORD: TO expr (KEYWORD:STEP expr)? KEYWORD:THEN expr

while_exp       : KEYWORD:WHILE expr KEYWORD:THEN expr

func_def        : KEYWORD:FUN IDENTIFIER?
                  LPAREN ( IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
                  ARROW expr